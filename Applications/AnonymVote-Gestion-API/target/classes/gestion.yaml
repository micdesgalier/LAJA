openapi: '3.0.3'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
tags:
  - name: gestion-end-point
    description: Gestion-API
paths:
  /utilisateurs:
    get:
      tags:
        - utilisateurs-end-point
      description: Liste tout les utilisateurs
      operationId: listUtilisateursUsingGET
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Utilisateur'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - utilisateurs-end-point
      summary: addUtilisateur
      operationId: addUtilisateurUsingPOST
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Utilisateur'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /utilisateurs/{id}:
    get:
      tags:
        - utilisateurs-end-point
      summary: listUtilisateur
      operationId: listUtilisateurUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Utilisateur'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    delete:
      tags:
        - utilisateurs-end-point
      summary: deleteUtilisateur
      operationId: deleteUtilisateurUsingID
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /sondages:
    get:
      tags:
        - sondages-end-point
      description: Liste tout les sondages
      operationId: listSondagesUsingGET
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sondage'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - sondages-end-point
      summary: addSondage
      operationId: addSondageUsingPOST
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Sondage'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /sondages/utilisateur/{login}:
    get:
      tags:
        - sondages-end-point
      description: Liste tout les sondages d'un utilisateur
      operationId: listSondagesUtilisateurUsingGET
      parameters:
        - name: login
          in: path
          description: login
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sondage'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /sondages/ouverts:
    get:
      tags:
        - sondages-end-point
      description: Liste tout les sondages ouverts
      operationId: listSondagesOuvertsUsingGET
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sondage'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /sondages/creation:
    get:
      tags:
        - sondages-end-point
      description: Liste tout les sondages en cr√©ation
      operationId: listSondagesCreationUsingGET
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sondage'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /sondages/fermes:
    get:
      tags:
        - sondages-end-point
      description: Liste tout les sondages fermes
      operationId: listSondagesFermesUsingGET
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sondage'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /sondages/{id}:
    get:
      tags:
        - sondages-end-point
      summary: ListSondage
      operationId: ListSondageUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Sondage'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
        - sondages-end-point
      summary: updateSondage
      operationId: updateSondageUsingID
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Sondage'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    delete:
      tags:
        - sondages-end-point
      summary: deleteSondage
      operationId: deleteSondageUsingID
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /sondages/{id}/questions:
    get:
      tags:
        - questions-end-point
      summary: ListQuestionsSondage
      operationId: ListQuestionsSondageUsingID
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /sondages/{id}/ouvrir:
    put:
      tags:
        - sondages-end-point
      summary: ouvrirSondage
      operationId: ouvrirSondageUsingID
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /sondages/{id}/fermer:
    put:
      tags:
        - sondages-end-point
      summary: fermerSondage
      operationId: fermerSondageUsingID
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /questions:
    get:
      tags:
        - questions-end-point
      description: Liste toutes les questions
      operationId: listQuestionsUsingGET
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - questions-end-point
      summary: addQuestion
      operationId: addQuestionUsingPOST
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /questions/{id}:
    get:
      tags:
        - questions-end-point
      summary: ListQuestion
      operationId: ListQuestionUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Question'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
        - questions-end-point
      summary: updateQuestion
      operationId: updateQuestionUsingID
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    delete:
      tags:
        - questions-end-point
      summary: deleteQuestion
      operationId: deleteQuestionUsingID
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /questions/{id}/choix:
    get:
      tags:
        - questions-end-point
      summary: ListChoixQuestion
      operationId: ListChoixQuestionUsingID
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Choix'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /choix:
    get:
      tags:
        - choix-end-point
      description: Liste toutes les choix
      operationId: listChoixUsingGET
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Choix'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - choix-end-point
      summary: addChoix
      operationId: addChoixUsingPOST
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Choix'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /choix/{id}:
    get:
      tags:
        - choix-end-point
      summary: ListChoix
      operationId: ListChoixUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Choix'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
        - choix-end-point
      summary: updateChoix
      operationId: updateChoixUsingID
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Choix'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    delete:
      tags:
        - choix-end-point
      summary: deleteChoix
      operationId: deleteChoixUsingID
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /codes:
    get:
      tags:
        - codes-end-point
      description: Liste toutes les codes
      operationId: listCodesUsingGET
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Code'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - codes-end-point
      summary: addCode
      operationId: addCodeUsingPOST
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Code'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /codes/{id}:
    get:
      tags:
        - codes-end-point
      summary: ListCode
      operationId: ListCodeUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Code'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
components:
  schemas:
    Utilisateur:
      type: object
      properties:
        id_utilisateur:
          type: integer
          format: int32
        login:
          type: string
        motDePasse:
          type: string
        type:
          type: boolean
      title: Utilisateur
    Sondage:
      type: object
      properties:
        id_sondage:
          type: integer
          format: int32
        id_utilisateur:
          type: integer
          format: int32
        sujet:
          type: string
        ouvert:
          type: boolean
        bloque:
          type: boolean
      title: Sondage
    Question:
      type: object
      properties:
        id_question:
          type: integer
          format: int32
        id_sondage:
          type: integer
          format: int32
        question:
          type: string
      title: Question
    Choix:
      type: object
      properties:
        id_choix:
          type: integer
          format: int32
        id_question:
          type: integer
          format: int32
        choix:
          type: string
        nb_choisi:
          type: integer
          format: int32
      title: Choix
    Code:
      type: object
      properties:
        id_code:
          type: integer
          format: int32
        id_utilisateur:
          type: integer
          format: int32
        id_sondage:
          type: integer
          format: int32
        code:
          type: string
      title: Code
servers:
  - url: 'https'